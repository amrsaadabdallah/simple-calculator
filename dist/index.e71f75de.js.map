{"mappings":"AACA,MAAMA,EAAoBC,OAAOC,SAASC,cACxC,yBAEIC,EAAOH,OAAOC,SAASG,iBAAiB,QAG9C,IAAIC,EACAC,EACAC,EAEAC,GAAmB,EACnBC,GAAoB,EAExB,MAAMC,EAAyB,KAC7B,MAAMC,EAAyBZ,EAAkBa,YACjD,MAA+B,MAA3BD,GACFZ,EAAkBa,YAAc,EACzB,GAEFD,GAGHE,EAAWC,IACff,EAAkBa,YAAcE,GAO5BC,EAAaC,IAEjB,IAAKP,EAAmB,CAOtB,GALID,IACFA,GAAmB,EACnBK,EAAQ,IAIc,MAAtBG,GACAjB,EAAkBa,YAAYK,SAAS,KAEvC,OAGF,GAAsC,MAAlClB,EAAkBa,YAAqB,CACzC,GAA0B,MAAtBI,EACF,OAEFH,EAAQG,OAxBO,CAAIA,IACvBjB,EAAkBa,aAAeI,GAyB7BE,CAAgBF,KAYhBG,EAAQ,KACZd,OAAUe,EACVd,OAAUc,EACVb,OAAYa,EACZZ,GAAmB,EACnBC,GAAoB,EACpBI,EAAQ,IAoCJQ,EAAgBC,IAGpB,OAFyB,IAAIA,EAAIC,WAAWC,MAAMC,GAAMA,EAAEC,WAAW,WAGnE,IAAK,aACHX,EAAUO,EAAIK,OACd,MACF,IAAK,eAxDYC,EAyDHN,EAAIK,MAxDpBpB,EAAYqB,EACZnB,GAAoB,EACpBJ,GAAWK,IACXF,GAAmB,EAsDf,MACF,IAAK,YA3CK,MACZ,QAAgBY,IAAZf,QAAuCe,IAAdb,EAAyB,CACpD,IAAIsB,EAGJ,OAFAvB,GAAWI,IAEHH,GACN,IAAK,IACHsB,EAASxB,EAAUC,EACnB,MACF,IAAK,IACHuB,EAASxB,EAAUC,EACnB,MACF,IAAK,IACHuB,EAASxB,EAAUC,EACnB,MACF,IAAK,IACHuB,EAASxB,EAAUC,EAMvBO,EAAQgB,GACR7B,OAAO8B,QAAQC,IAAG,GAAI1B,KAAWE,KAAaD,OAAauB,KAG3DxB,EAAUwB,EACVvB,OAAUc,EACVb,OAAYa,EACZX,GAAoB,IAelBuB,GACA,MACF,IAAK,YACHb,IA/DW,IAAIS,GAuErBzB,EAAK8B,SAASX,GAAQA,EAAIY,iBAAiB,SAAO,IAAQb,EAAaC,OAEhE,MAAMa,EAAiBhB,EClIxBiB,EAAsBpC,OAAOC,SAASG,iBAAiB,iBACvDiC,GAAc,IAAIC,MAAOC,cCG/BJ,IDCEC,EAAoBH,SAASO,IAC3BA,EAAI5B,YAAcyB","sources":["content/js/calculator.js","content/js/current-year.js","content/js/main.js"],"sourcesContent":["// Chaching needed Dom Elements\r\nconst calculatorDisplay = window.document.querySelector(\r\n  '.calculator__display '\r\n);\r\nconst btns = window.document.querySelectorAll('.btn');\r\n\r\n// local variable for calculatorIIFE\r\nlet number1;\r\nlet number2;\r\nlet operation;\r\n\r\nlet isWaitingNumber2 = false;\r\nlet isWaitingOperator = false;\r\n\r\nconst getCurrentDisplayedNumber = () => {\r\n  const CurrentDisplayedNumber = calculatorDisplay.textContent;\r\n  if (CurrentDisplayedNumber === '.') {\r\n    calculatorDisplay.textContent = 0;\r\n    return 0;\r\n  }\r\n  return CurrentDisplayedNumber;\r\n};\r\n\r\nconst display = (number) => {\r\n  calculatorDisplay.textContent = number;\r\n};\r\n\r\nconst mergeAndDisplay = (numberStringValue) => {\r\n  calculatorDisplay.textContent += numberStringValue;\r\n};\r\n\r\nconst setNumber = (numberStringValue) => {\r\n  // check if not exist result before as if exist waiting for an operator\r\n  if (!isWaitingOperator) {\r\n    // check if waiting for enter second number\r\n    if (isWaitingNumber2) {\r\n      isWaitingNumber2 = false;\r\n      display(0);\r\n    }\r\n\r\n    if (\r\n      numberStringValue === '.' &&\r\n      calculatorDisplay.textContent.includes('.')\r\n    ) {\r\n      return undefined;\r\n    }\r\n\r\n    if (calculatorDisplay.textContent === '0') {\r\n      if (numberStringValue === '0') {\r\n        return undefined;\r\n      }\r\n      display(numberStringValue);\r\n    } else {\r\n      mergeAndDisplay(numberStringValue);\r\n    }\r\n  }\r\n};\r\n\r\nconst setOperator = (operatorStringValue) => {\r\n  operation = operatorStringValue;\r\n  isWaitingOperator = false;\r\n  number1 = +getCurrentDisplayedNumber();\r\n  isWaitingNumber2 = true;\r\n};\r\n\r\nconst setClear = () => {\r\n  number1 = undefined;\r\n  number2 = undefined;\r\n  operation = undefined;\r\n  isWaitingNumber2 = false;\r\n  isWaitingOperator = false;\r\n  display(0);\r\n};\r\n\r\nconst setEqual = () => {\r\n  if (number1 !== undefined && operation !== undefined) {\r\n    let result;\r\n    number2 = +getCurrentDisplayedNumber();\r\n\r\n    switch (operation) {\r\n      case '+':\r\n        result = number1 + number2;\r\n        break;\r\n      case '-':\r\n        result = number1 - number2;\r\n        break;\r\n      case '*':\r\n        result = number1 * number2;\r\n        break;\r\n      case '/':\r\n        result = number1 / number2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    display(result);\r\n    window.console.log(`${number1} ${operation} ${number2} = ${result}`);\r\n\r\n    // strat setting to accept operation on a last result\r\n    number1 = result;\r\n    number2 = undefined;\r\n    operation = undefined;\r\n    isWaitingOperator = true;\r\n  }\r\n};\r\n\r\nconst setBtnAction = (btn) => {\r\n  const specialClassName = [...btn.classList].find((c) => c.startsWith('btn-'));\r\n\r\n  switch (specialClassName) {\r\n    case 'btn-number':\r\n      setNumber(btn.value);\r\n      break;\r\n    case 'btn-operator':\r\n      setOperator(btn.value);\r\n      break;\r\n    case 'btn-equal':\r\n      setEqual();\r\n      break;\r\n    case 'btn-clear':\r\n      setClear();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n// Add click event to all calculator buttons.\r\nbtns.forEach((btn) => btn.addEventListener('click', () => setBtnAction(btn)));\r\n\r\nexport const calculatorInit = setClear;\r\n\r\n// cases:\r\n// 1- not accept multiple . in number\r\n// 2- when write operator start to enter number2 so clear display screen when enter first number after that\r\n// 3- after equal operator set result to number 1\r\n","// Caching the needed Dom Elements\r\nconst currentYearElements = window.document.querySelectorAll('.current-year');\r\nconst currentYear = new Date().getFullYear();\r\n\r\n// auto update Current year functionality\r\nexport const autoUpdateCurrentYear = () => {\r\n  currentYearElements.forEach((ele) => {\r\n    ele.textContent = currentYear;\r\n  });\r\n};\r\n","import { calculatorInit } from './calculator';\r\n\r\nimport { autoUpdateCurrentYear } from './current-year';\r\n\r\n// Initialize calculator\r\ncalculatorInit();\r\n\r\n// Auto update Current year functionality\r\nautoUpdateCurrentYear();\r\n"],"names":["$ba3aced852236d7f$var$calculatorDisplay","window","document","querySelector","$ba3aced852236d7f$var$btns","querySelectorAll","$ba3aced852236d7f$var$number1","$ba3aced852236d7f$var$number2","$ba3aced852236d7f$var$operation","$ba3aced852236d7f$var$isWaitingNumber2","$ba3aced852236d7f$var$isWaitingOperator","$ba3aced852236d7f$var$getCurrentDisplayedNumber","CurrentDisplayedNumber","textContent","$ba3aced852236d7f$var$display","number","$ba3aced852236d7f$var$setNumber","numberStringValue","includes","$ba3aced852236d7f$var$mergeAndDisplay","$ba3aced852236d7f$var$setClear","undefined","$ba3aced852236d7f$var$setBtnAction","btn","classList","find","c","startsWith","value","operatorStringValue","result","console","log","$ba3aced852236d7f$var$setEqual","forEach","addEventListener","$ba3aced852236d7f$export$4223dbf2172444ee","$10e92eb9cd700234$var$currentYearElements","$10e92eb9cd700234$var$currentYear","Date","getFullYear","ele"],"version":3,"file":"index.e71f75de.js.map"}